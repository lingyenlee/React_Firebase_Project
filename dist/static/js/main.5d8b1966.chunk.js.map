{"version":3,"sources":["components/layout/SignedInLinks.js","actions/authActions.js","actions/types.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/DashBoard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","actions/projectActions.js","App.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/index.js","config/rrfConfig.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","getFirebase","auth","logout","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","DashBoard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","Date","payload","AuthIsLoaded","children","useSelector","isLoaded","App","exact","path","component","ProjectDetails","initialState","authReducer","action","console","log","message","projectReducer","combineReducers","firestoreReducer","firebaseReducer","rrfConfig","userProfile","useFirestoreForProfile","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","config","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"mSAwBeA,cAAQ,MANI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,GCGZ,SAACA,EAAUE,EAAX,GAA0C,IACvCC,GAAWC,EAD2B,EAAlBA,eAG1BD,EAASE,OAAOJ,UAEhBE,EAASG,SACJC,MAAK,WACFP,EAAS,CACLQ,KC3BU,6BFoBfT,EAnBO,SAACU,GACnB,OACI,wBAAIC,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,eAAJ,KACA,gCAAK,uBAAGC,KAAK,KAAKC,QAASJ,EAAMR,SAA5B,WAAL,KACA,gCAAK,kBAAC,IAAD,CAASU,GAAG,IAAID,UAAU,mCAC1BD,EAAMK,QAAQC,UADnB,SGKGC,EAXQ,WAEnB,OACI,wBAAIN,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WAAJ,KACA,gCAAK,kBAAC,IAAD,CAASA,GAAG,WAAZ,SAAL,OCqBGZ,eARS,SAAAkB,GAEpB,MAAO,CACHZ,KAAMY,EAAMd,SAASE,KACrBS,QAASG,EAAMd,SAASW,WAIjBf,EAxBA,SAACU,GAAW,IACfJ,EAAkBI,EAAlBJ,KAAMS,EAAYL,EAAZK,QAERI,EAAQb,EAAKc,IAAM,kBAAC,EAAD,CAAeL,QAASA,IAAc,kBAAC,EAAD,MAC/D,OACI,6BACI,yBAAKJ,UAAU,6BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,cACCQ,Q,yDCeNE,EA3BO,SAACX,GAAW,IACtBY,EAAkBZ,EAAlBY,cACR,OACI,yBAAKX,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,gBACA,wBAAIA,UAAU,iBACTW,GAAiBA,EAAcC,KAAI,SAAAC,GAChC,OACI,wBAAIC,IAAKD,EAAKE,IACV,0BAAMf,UAAU,aAAaa,EAAKG,KAAlC,KACA,8BAAOH,EAAKI,SACZ,yBAAKjB,UAAU,uBACVkB,IAAOL,EAAKM,KAAKC,UAAUC,oBCFrDC,EAZQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACI,yBAAKvB,UAAU,kCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcuB,EAAQC,OACtC,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChD,uBAAG1B,UAAU,aAAakB,IAAOK,EAAQI,UAAUP,UAAUQ,eCS9DC,EAdK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACI,yBAAK9B,UAAU,wBACV8B,GAAYA,EAASlB,KAAI,SAAAW,GACtB,OACI,kBAAC,IAAD,CAAMtB,GAAI,YAAcsB,EAAQR,GAAID,IAAKS,EAAQR,IAC7C,kBAAC,EAAD,CAAgBQ,QAASA,U,QCF3CQ,E,iLACQ,IAAD,EACqCC,KAAKjC,MAAvC+B,EADH,EACGA,SAAUnC,EADb,EACaA,KAAMgB,EADnB,EACmBA,cAExB,OAAKhB,EAAKc,IAGN,yBAAKT,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAa8B,SAAUA,KAE3B,yBAAK9B,UAAU,wBACX,kBAAC,EAAD,CAAeW,cAAeA,OATxB,kBAAC,IAAD,CAAUV,GAAG,gB,GAJnBgC,aA8BTC,cACX7C,aAVoB,SAACkB,GAErB,MAAO,CACHuB,SAAUvB,EAAM4B,UAAUC,QAAQN,SAClCnC,KAAMY,EAAMd,SAASE,KACrBgB,cAAeJ,EAAM4B,UAAUC,QAAQzB,kBAM3C0B,2BAAiB,CACb,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJpDL,CAMbH,GCIaG,cACX7C,aAboB,SAACkB,EAAOkC,GAE5B,IAAM1B,EAAK0B,EAASC,MAAMC,OAAO5B,GAC3Be,EAAWvB,EAAM4B,UAAUS,KAAKd,SAGtC,MAAO,CACHP,QAHYO,EAAWA,EAASf,GAAM,KAItCpB,KAAMY,EAAMd,SAASE,SAMzB0C,2BAAiB,CACb,CAAEC,WAAY,cAHPJ,EAzCQ,SAACnC,GAAW,IAEvBwB,EAAkBxB,EAAlBwB,QACR,OAD0BxB,EAATJ,KACPc,IAENc,EAEI,yBAAKvB,UAAU,qCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAcuB,EAAQC,OACtC,2BAAID,EAAQN,UAEhB,yBAAKjB,UAAU,wCACX,0CAAgBuB,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,6BAAMR,IAAOK,EAAQI,UAAUP,UAAUQ,eAOrD,yBAAK5B,UAAU,oBACX,mDApBU,kBAAC,IAAD,CAAUC,GAAG,e,QCLjC4C,E,2MACFtC,MAAQ,CACJuC,MAAO,GACPC,SAAU,I,EAIdC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAIhCC,aAAe,SAAAJ,GACXA,EAAEK,iBACF,EAAKvD,MAAMwD,OAAO,EAAKhD,Q,wEAGjB,IAAD,EACuByB,KAAKjC,MAAzByD,EADH,EACGA,UACR,OAFK,EACc7D,KACVc,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAG9B,yBAAKD,UAAU,aACX,0BAAMA,UAAU,QAAQyD,SAAUzB,KAAKqB,cACnC,wBAAIrD,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACX,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,QAAQiB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAElD,yBAAKhD,UAAU,eACX,2BAAO0D,QAAQ,YAAf,YACA,2BAAO5D,KAAK,WAAWiB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAExD,yBAAKhD,UAAU,eACX,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBAAmBwD,EAAY,2BAAIA,GAAiB,a,GApCtEvB,aA0DN5C,eAbS,SAACkB,GACrB,MAAO,CACHiD,UAAWjD,EAAMZ,KAAK6D,UACtB7D,KAAMY,EAAMd,SAASE,SAIF,SAACL,GACxB,MAAO,CACHiE,OAAQ,SAACK,GAAD,OAAWtE,GTzDJuE,ESyDoBD,ETxDhC,SAACtE,EAAUE,EAAX,IACcE,EAD2B,EAAlBA,eAGjBC,OAAOmE,2BACZD,EAAYf,MACZe,EAAYd,UACdlD,MAAK,WACHP,EAAS,CACLQ,KCTa,qBDWlBiE,OAAM,SAAAC,GACL1E,EAAS,CACLQ,KCZW,cDaXkE,cAdM,IAACH,MS6DRxE,CAA6CwD,GC1DtDoB,E,2MACF1D,MAAQ,CACJuC,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,I,EAGdnB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAIhCC,aAAe,SAAAJ,GACXA,EAAEK,iBACF,EAAKvD,MAAMqE,OAAO,EAAK7D,Q,wEAGjB,IAAD,EACuByB,KAAKjC,MAAzBJ,EADH,EACGA,KAAM6D,EADT,EACSA,UACd,OAAI7D,EAAKc,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAG9B,yBAAKD,UAAU,aACX,0BAAMA,UAAU,QAAQyD,SAAUzB,KAAKqB,cACnC,wBAAIrD,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACX,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,QAAQiB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAElD,yBAAKhD,UAAU,eACX,2BAAO0D,QAAQ,YAAf,YACA,2BAAO5D,KAAK,WAAWiB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAExD,yBAAKhD,UAAU,eACX,2BAAO0D,QAAQ,aAAf,cACA,2BAAO5D,KAAK,OAAOiB,GAAG,YAAY4C,SAAU3B,KAAKgB,gBAErD,yBAAKhD,UAAU,eACX,2BAAO0D,QAAQ,YAAf,aACA,2BAAO5D,KAAK,OAAOiB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAEpD,yBAAKhD,UAAU,eACX,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBAAmBwD,EAAY,2BAAIA,GAAiB,a,GA7CtEvB,aAoEN5C,eAbS,SAACkB,GACrB,MAAO,CACHZ,KAAMY,EAAMd,SAASE,KACrB6D,UAAWjD,EAAMZ,KAAK6D,cAIH,SAAClE,GACxB,MAAO,CACH8E,OAAQ,SAAAC,GAAO,OAAI/E,EVhCL,SAAC+E,GACnB,OAAO,SAAC/E,EAAUE,EAAX,GAAwD,IAAjCE,EAAgC,EAAhCA,YAAa4E,EAAmB,EAAnBA,aACjC7E,EAAWC,IACXyC,EAAYmC,IAElB7E,EAASE,OAAO4E,+BACZF,EAAQvB,MACRuB,EAAQtB,UACVlD,MAAK,SAAC2E,GACJ,OAAOrC,EAAUG,WAAW,SACvBmC,IAAID,EAASxD,KAAKP,KAClBiE,IAAI,CACDR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB9D,SAAUgE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAE3DtE,MAAK,WACJP,EAAS,CACLQ,KClDc,sBDoDnBiE,OAAM,SAAAC,GACL1E,EAAS,CACLQ,KCrDY,eDsDZkE,YUSoBI,CAAOC,QAI5BhF,CAA6C4E,G,QCpEtDU,E,2MACFpE,MAAQ,CACJiB,MAAO,GACPP,QAAS,I,EAGb+B,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAIhCC,aAAe,SAAAJ,GACXA,EAAEK,iBACF,EAAKvD,MAAM6E,cAAc,EAAKrE,OAC9B,EAAKR,MAAM8E,QAAQC,KAAK,M,wEAMxB,OADiB9C,KAAKjC,MAAdJ,KACEc,IAEN,yBAAKT,UAAU,aACX,0BAAMA,UAAU,QAAQyD,SAAUzB,KAAKqB,cACnC,wBAAIrD,UAAU,2BAAd,kBACA,yBAAKA,UAAU,eACX,2BAAO0D,QAAQ,SAAf,SACA,2BAAO5D,KAAK,OAAOiB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAEjD,yBAAKhD,UAAU,eACX,2BAAO0D,QAAQ,WAAf,mBACA,8BAAU3C,GAAG,UAAUf,UAAU,uBAAuB2D,SAAU3B,KAAKgB,gBAE3E,yBAAKhD,UAAU,eACX,4BAAQA,UAAU,gCAAlB,qBAdM,kBAAC,IAAD,CAAUC,GAAG,gB,GArBfgC,aAsDb5C,eAVS,SAACkB,GACrB,MAAO,CACHZ,KAAMY,EAAMd,SAASE,SAGF,SAACL,GACxB,MAAO,CACHsF,cAAe,SAACrD,GAAD,OAAajC,ECtDP,SAACiC,GAC5B,OAAO,SAACjC,EAAUE,EAAX,GAA2C,IAE1C2C,GAAYmC,EAF6B,EAAnBA,gBAGtBlE,EAAUZ,IAAWC,SAASW,QAC9B2E,EAAWvF,IAAWC,SAASE,KAAKc,IAC1C0B,EAAUG,WAAW,YAAY0C,IAAjC,eACKzD,EADL,CAEEE,gBAAiBrB,EAAQ8D,UACzBxC,eAAgBtB,EAAQ+D,SACxBY,SAAUA,EACVpD,UAAW,IAAIsD,QACdpF,MAAK,WACNP,EAAS,CACPQ,KXhBsB,iBWiBtBoF,QAAS3D,OAEVwC,OAAM,SAAAC,GACP1E,EAAS,CACPQ,KXpB4B,uBWqB5BoF,QAASlB,QDkC4BY,CAAcrD,QAG5ClC,CAA6CsF,GE/C5D,SAASQ,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChBzF,EAAO0F,aAAY,SAAA9E,GAAK,OAAIA,EAAMd,SAASE,QACjD,OAAK2F,mBAAS3F,GACPyF,EADqB,4CA0BfG,MArBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKvF,UAAU,OACb,kBAACmF,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,IAAIC,UAAW3D,IACjC,kBAAC,IAAD,CAAO0D,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAW7C,IACjC,kBAAC,IAAD,CAAO4C,KAAK,UAAUC,UAAWzB,IACjC,kBAAC,IAAD,CAAOwB,KAAK,UAAUC,UAAWf,U,iBC7BzCiB,G,cAAe,CACjBpC,UAAW,OAuCAqC,EApCK,WAAmC,IAAlCtF,EAAiC,uDAAzBqF,EAAcE,EAAW,uCAElD,OAAQA,EAAOhG,MACX,IbNmB,caQf,OADAiG,QAAQC,IAAI,eACL,eACAzF,EADP,CAEIiD,UAAW,iBAEnB,IbbqB,gBaejB,OADAuC,QAAQC,IAAI,iBAAkBF,EAAOZ,SAC9B,eACA3E,EADP,CAEIiD,UAAW,OAEnB,IbjBsB,iBamBlB,OADAuC,QAAQC,IAAI,mBACLzF,EACX,IbnBsB,iBaqBlB,OADAwF,QAAQC,IAAI,kBACL,eACAzF,EADP,CAEIiD,UAAW,OAEnB,IbxBoB,ea0BhB,OADAuC,QAAQC,IAAI,gBACL,eACAzF,EADP,CAEIiD,UAAWsC,EAAO9B,IAAIiC,UAE9B,QACI,OAAO1F,ICnCbqF,EAAe,CACjB9D,SAAU,CACN,CAAEf,GAAI,EAAGS,MAAO,qBAAsBP,QAAS,kBAC/C,CAAEF,GAAI,EAAGS,MAAO,oBAAqBP,QAAS,kBAC9C,CAAEF,GAAI,EAAGS,MAAO,kBAAmBP,QAAS,oBAkBrCiF,EAdQ,WAAmC,IAAlC3F,EAAiC,uDAAzBqF,EAAcE,EAAW,uCAErD,OAAQA,EAAOhG,MACX,IdbsB,iBcelB,OADAiG,QAAQC,IAAI,iBAAkBF,EAAOZ,SAC9B3E,EACX,Idf4B,uBciBxB,OADAwF,QAAQC,IAAI,uBAAwBF,EAAOZ,SACpC3E,EACX,QACI,OAAOA,I,QCdJ4F,cAAgB,CAC3BxG,KAAMkG,EACNtE,QAAS2E,EACT/D,UAAWiE,mBACX3G,SAAU4G,oB,SCHCC,EALG,CACdC,YAAa,QACbC,wBAAwB,GCMbC,EAVM,CACjBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBCSnBxH,IAASyH,cAAcT,GACvBhH,IAAS0C,YAET,IAEMgF,EAAQC,YACZC,EAHmB,GAKnBnF,YACEoF,YAAgBC,IAAMC,kBAAkB,CAAE9H,0BAAa4E,+BACvDmD,yBAAehI,OAIbiI,EAAW,CACfjI,aACAkI,OAAQrB,EACRhH,SAAU6H,EAAM7H,SAChBsI,mDAIFC,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOA,GACf,kBAAC,6BAA+BO,EAC9B,kBAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.5d8b1966.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { signOut } from \"../../actions/authActions\"\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink> </li>\n            <li> <a href=\"#!\" onClick={props.signOut}>Log Out</a> </li>\n            <li> <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n                {props.profile.initials}\n            </NavLink> </li>\n        </ul>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","import { LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from \"./types\"\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({\n                type: LOGIN_SUCCESS\n            })\n        }).catch(err => {\n            dispatch({\n                type: LOGIN_ERROR,\n                err\n            })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signOut()\n        //need this to remove missing permission error in firebase rules\n        firebase.logout()\n            .then(() => {\n                dispatch({\n                    type: LOGOUT_SUCCESS\n                })\n            })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection(\"users\")\n                .doc(response.user.uid)\n                .set({\n                    firstName: newUser.firstName,\n                    lastName: newUser.lastName,\n                    initials: newUser.firstName[0] + newUser.lastName[0]\n                })\n        }).then(() => {\n            dispatch({\n                type: SIGNUP_SUCCESS\n            })\n        }).catch(err => {\n            dispatch({\n                type: SIGNUP_ERROR,\n                err\n            })\n        })\n    }\n}","export const CREATE_PROJECT = \"CREATE_PROJECT\"\nexport const CREATE_PROJECT_ERROR = \"CREATE_PROJECT_ERROR\"\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const LOGIN_ERROR = \"LOGIN_ERROR\"\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\"\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\"","import React from 'react'\nimport { NavLink } from \"react-router-dom\"\n\n\nconst SignedOutLinks = () => {\n\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink> </li>\n            <li> <NavLink to=\"/signin\">Login</NavLink> </li>\n        </ul>\n    )\n}\n\n\nexport default SignedOutLinks\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport SignedInLinks from \"./SignedInLinks\"\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from \"react-redux\"\n\nconst NavBar = (props) => {\n    const { auth, profile } = props\n    \n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return (\n        <div>\n            <nav className=\"nav-wrapper grey darken-3\">\n                <div className=\"container\">\n                    <Link to=\"/\" className=\"brand-logo\">Mario Plan</Link>\n                    {links}\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n   // console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar)\n","import React from 'react'\nimport moment from \"moment\"\n\nconst Notifications = (props) => {\n    const { notifications } = props\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notification</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications\n","import React from 'react'\nimport moment from \"moment\"\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list-section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={\"/project/\" + project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList\n","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from \"react-redux\"\nimport { firestoreConnect } from \"react-redux-firebase\"\nimport { compose } from \"redux\"\nimport { Redirect } from \"react-router-dom\"\n\nclass DashBoard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props\n\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        //console.log(this.props)\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state)\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n        { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n    ])\n)(DashBoard)\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport { firestoreConnect } from \"react-redux-firebase\"\nimport { compose } from \"redux\"\nimport { Redirect } from \"react-router-dom\"\nimport moment from \"moment\"\n\nconst ProjectDetails = (props) => {\n\n    const { project, auth } = props\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project....</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    // console.log(state)\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: \"projects\" }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { signIn } from \"../../actions/authActions\"\nimport { Redirect } from \"react-router-dom\"\n\nclass SignIn extends Component {\n    state = {\n        email: \"\",\n        password: \"\"\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n\n    render() {\n        const { authError, auth } = this.props\n        if (auth.uid) return <Redirect to=\"/\" />\n        \n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">{authError ? <p>{authError}</p> : null}</div>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\nimport { signUp } from \"../../actions/authActions\"\n\nclass SignUp extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth, authError } = this.props\n        if (auth.uid) return <Redirect to=\"/\" />\n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">{authError ? <p>{authError}</p> : null}</div>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: newUser => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { createProject } from \"../../actions/projectActions\"\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\n\nclass CreateProject extends Component {\n    state = {\n        title: \"\",\n        content: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.createProject(this.state)\n        this.props.history.push(\"/\")\n    }\n\n    render() {\n        //redirect to home\n        const { auth } = this.props\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create Project</button>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"./types\"\n\nexport const createProject = (project) => {\n  return (dispatch, getState, { getFirestore }) => {\n\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile\n    const authorId = getState().firebase.auth.uid\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({\n        type: CREATE_PROJECT,\n        payload: project\n      });\n    }).catch(err => {\n      dispatch({\n        type: CREATE_PROJECT_ERROR,\n        payload: err\n      });\n    });\n  }\n};","import React, { Fragment } from 'react';\nimport { useSelector } from \"react-redux\"\nimport { isLoaded } from \"react-redux-firebase\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport NavBar from \"./components/layout/NavBar\"\nimport DashBoard from './components/dashboard/DashBoard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from \"./components/auth/SignIn\"\nimport SignUp from \"./components/auth/SignUp\"\nimport CreateProject from './components/projects/CreateProject';\n\n//wait for auth to load\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading....</div>;\n  return children\n}\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <AuthIsLoaded>\n          <NavBar />\n          <Switch>\n            <Fragment>\n              <Route exact path=\"/\" component={DashBoard} />\n              <Route path=\"/project/:id\" component={ProjectDetails} />\n              <Route path=\"/signin\" component={SignIn} />\n              <Route path=\"/signup\" component={SignUp} />\n              <Route path=\"/create\" component={CreateProject} />\n            </Fragment>\n          </Switch>\n        </AuthIsLoaded>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT_SUCCESS, SIGNUP_SUCCESS, SIGNUP_ERROR } from \"../actions/types\";\n\nconst initialState = {\n    authError: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    //console.log(action.payload)\n    switch (action.type) {\n        case LOGIN_ERROR:\n            console.log(\"login error\")\n            return {\n                ...state,\n                authError: \"Login failed\"\n            }\n        case LOGIN_SUCCESS:\n            console.log(\"signin success\", action.payload)\n            return {\n                ...state,\n                authError: null\n            }\n        case LOGOUT_SUCCESS:\n            console.log(\"signout success\")\n            return state\n        case SIGNUP_SUCCESS:\n            console.log(\"signup success\")\n            return {\n                ...state,\n                authError: null\n            }\n        case SIGNUP_ERROR:\n            console.log(\"signup error\")\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n\n}\n\nexport default authReducer;","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from \"../actions/types\"\n\nconst initialState = {\n    projects: [\n        { id: 1, title: \"help me find peach\", content: \"blah blah blah\" },\n        { id: 2, title: \"collect all stars\", content: \"blah blah blah\" },\n        { id: 3, title: \"easter egg hunt\", content: \"blah blah blah\" }\n    ]\n}\n\nconst projectReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case CREATE_PROJECT:\n            console.log(\"create project\", action.payload)\n            return state;\n        case CREATE_PROJECT_ERROR:\n            console.log(\"create project error\", action.payload)\n            return state;\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;","import { combineReducers } from \"redux\"\nimport authReducer from \"./authReducer\"\nimport projectReducer from \"./projectReducer\"\nimport { firestoreReducer } from \"redux-firestore\"\nimport {firebaseReducer} from \"react-redux-firebase\"\n\nexport default combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})","\n// react-redux-firebase config\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\n\nexport default rrfConfig;","var firebaseConfig = {\n    apiKey: \"AIzaSyBUYiL-CL0bbBtlO_33nu2rYNUtLckuHiQ\",\n    authDomain: \"planprojectreact-458bf.firebaseapp.com\",\n    databaseURL: \"https://planprojectreact-458bf.firebaseio.com\",\n    projectId: \"planprojectreact-458bf\",\n    storageBucket: \"planprojectreact-458bf.appspot.com\",\n    messagingSenderId: \"189869907965\",\n    appId: \"1:189869907965:web:32fe5f3f1dd49c4e250394\",\n    measurementId: \"G-HCQRYVKSDK\"\n};\nexport default firebaseConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './reducers/index'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport rrfConfig from \"./config/rrfConfig\"\nimport firebaseConfig from \"./config/fbConfig\"\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore()\n\nconst initialState = {}\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase)\n  )\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}